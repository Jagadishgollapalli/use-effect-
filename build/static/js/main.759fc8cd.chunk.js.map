{"version":3,"sources":["Counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","count","setCount","city","setCity","useEffect","console","log","style","border","width","type","value","onChange","target","placeholder","className","onClick","App","show","setShow","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLA8CeA,MA3Cf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBF,mBAAS,WAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAwBA,OAjBAC,qBAAU,WAER,OADAC,QAAQC,IAAI,yBACL,WACLD,QAAQC,IAAI,+BAEb,CAACJ,IAGJE,qBAAU,WACRC,QAAQC,IAAI,2CAIdF,qBAAU,WACRC,QAAQC,IAAI,sCACX,CAACN,IAGF,gCACE,uBACEO,MAAO,CAACC,OAAQ,YAAYC,MAAM,SAClCC,KAAK,OACLC,MAAOT,EACPU,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BR,EAAQQ,IAC7CG,YAAY,0BAEd,iDAAoBd,KACpB,wBAAQe,UAAU,0BAA0BC,QAhC9B,kBAAMf,EAASD,EAAQ,IAgCrC,uBATF,OAUE,wBAAQe,UAAU,yBAAyBC,QAhC7B,kBAAMf,EAASD,EAAQ,IAgCrC,uBAVF,OAWE,wBAAQe,UAAU,yBAAyBC,QAhCjC,kBAAMf,EAAS,IAgCzB,uBCtCS,SAASgB,IACtB,MAAwBlB,oBAAS,GAAjC,mBAAOmB,EAAP,KAAaC,EAAb,KACA,OACE,sBAAKJ,UAAU,QAAQR,MAAO,CAACa,UAAW,UAA1C,UACE,6BAAI,oEACJ,wBAAQL,UAAU,yBAAyBC,QAAS,kBAAMG,GAASD,IAAnE,SAA2EA,EAAO,YAAc,cAChG,uBACA,uBACCA,EAAO,cAAC,EAAD,IAAc,gCCX5B,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.759fc8cd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction Counter() {\r\n  const [count, setCount] = useState(0);\r\n  const [city, setCity] = useState('Chennai');\r\n\r\n  const increment = () => setCount(count + 1);\r\n  const decrement = () => setCount(count - 1);\r\n  const reset = () => setCount(0);\r\n\r\n  // componentDidMount\r\n  useEffect(() => {\r\n    console.log('componentDidMount !!!');\r\n    return () => {\r\n      console.log('componentWillUnmount !!!');\r\n    };\r\n  }, [city]);\r\n\r\n  // componentDidUpdate\r\n  useEffect(() => {\r\n    console.log('componentDidUpdate for all state !!!');\r\n  });\r\n\r\n  // componentDidUpdate for count\r\n  useEffect(() => {\r\n    console.log('componentDidUpdate for count !!!');\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <input \r\n        style={{border: '2px solid',width:'250px'}}\r\n        type=\"text\"\r\n        value={city}\r\n        onChange={({ target: { value } }) => setCity(value)}\r\n        placeholder=\"set your default city\"\r\n      />\r\n      <p>Counter value : {count}</p>\r\n      <button className=\"btn btn-primary active \" onClick={increment}>Increment</button>&nbsp;\r\n      <button className=\"btn btn-primary active\" onClick={decrement}>Decrement</button>&nbsp;\r\n      <button className=\"btn btn-primary active\" onClick={reset}>Reset</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n\r\n","import React, { useState } from 'react';\nimport Counter from './Counter';\n\nexport default function App() {\n  const [show, setShow] = useState(true);\n  return (\n    <div className=\"mt-3 \" style={{textAlign: 'center'}}>\n      <h4><u>Component life cycle -UseEffect()</u></h4>\n      <button className=\"btn btn-success active\" onClick={() => setShow(!show)}>{show ? 'Hide Data' : 'Show Data'}</button>\n      <br />\n      <br />\n      {show ? <Counter /> : <></>}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}